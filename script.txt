 

do obj($x) as fruit($x);container($x)

do desc(apple) as apple
do desc(orange) as orange
do desc(box) as convencional box

do container(box)
do fruit(apple)
do fruit(orange)
do inbastek(apple)

do desc($x) => fruit($x), [yumm, desc($x)]
do desc($x) => inbastek($x) ,[desc($x) ,in basket ]


do flatten2([], [] )  as $FlatL = [] 
do flatten2($x, $FlatL )  as not(list($x)), $FlatL = [$x] 
do flatten2($LLs, $FlatL) =>    head($L,$LLs ) , flatten2($L, $nL), tail($Ls,$LLs),flatten2($Ls, $nLs) , append( $nL , $nLs, $FlatL)  



do u($abL, $Z) as HT( $a, $bL, $abL ), HT( $b, $L, $bL ),{ $a=$b, u($bL,$Z) }; { $a != $b, u($bL,$Lu) , append([$a] , $Lu , $Z) }
unless u($x, $y) as $x = $y

 


do link(a,b)
do link(b,c)
do link(c,d)
do link(b,e)

do ($x,route,$y) as  link($x,$y), [$x,$y]
unless  ($x,route,$y) as  $r1 = route($x,$z), $r2 = route($z,$y), [ $r1,$r2]


do qmain() as  u([1,2,2,3,4,4,6,7,7,7,7,7],$x),$x
do qmain() as  $rr = route(a,d) , flatten2( $rr, $ro), u($ro , $ru), $ru
 
 
do main() as append($x,$y,[1,2,3,1,2,3]),$x != $y,$x
do qmain() as nextto($x,$x,[1,2,3,4,3,2,2,5,6,2,3,1]), $x

do qmain() as $r = (a,route,d), flatten2($r,$rs), u( $rs, $u), $u