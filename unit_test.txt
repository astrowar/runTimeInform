 
 
 


do room(comando)
do room(reator)
do room(exterior)
do room(camara)

do croute(comando  , oeste , camara) 
do croute( camara  , oeste , exterior)
do croute(reator  , norte , comando)
do route($x, $d, $y)  as   opposite($d,$d_opp), croute($y, $d_opp, $x )
do route($x, $d, $y)  as   croute($x, $d , $y )

do repr(nave)  as "a nave"
do repr(exterior)  as "o espaço"
do repr(outter_space)  as "o espaço"
 

do repr(reator)  as "a sala do reator"
do repr(comando)  as "a sala de comando"
do repr(exterior)  as "o exterior da nave"
do repr(camara)  as "a camara de descompressão" 

do class($x,room) as room($x) 
do classOf($x,$c) as class($x,$c) 
do classOf($x,$c) as class($x,$ci),class($ci,$c)

do instace_obj( $x) as  class($x,_), not(class(_,$x)) 

do property_def(room, region , nave ) 

do state_def(thing, wearable,  $w ) as $w ={ true; false }
do state_def( device , enable_status, $x) as  $x ={ on;off }
do state_def( room , iluminacao_value, $x) as  $x = {  dark ;lighted} 
                                   // cada atom da classe recebe entao um predicado do tipo state_value(corredor, s64736846 , lighted ) 


do change( $r , $new  ) as state_value($r,$state,$value),state_def(_,$state,$new ), unset( state_value($r, $state, _ ) ),set( state_value($r, $state, $new ) ) 
do state($r,$val) as state_value($r, _, $val )


 

//inicia as variaveis de estado
do init() as instace_obj($x),classOf($x,$cc), last(state_def($cc,$s,$value)), set( state_value($x, $s, $value ) ) 
do ($x , is , $value) as  state_value($x , _ ,$value )

//define as propriedades do objetos
             //eh um objeto final , determina a classe  obtem as propriedades daquela classe ,        ainda nao tem valor definido    adiciona uma clausla para essa instancia  
do init() as {  instace_obj($x), 
                classOf($x , $cc ), 
                property_def($cc , $pname ,$default_value ), 
                not(apply($pname ,$x, _ ) ) ,    
                set( $pname , [$x,  $default_value] )  
                }


do change($r, $pname, $new) as apply($pname ,$r, _ ), not(apply($pname ,$r, $new )), unset( $pname, [$r, _ ] ),set( $pname ,[ $r, $new ] ) 
 
 do region(exterior , outter_space )


do junt("a o" , "ao")
do junt("a a" , "à")

do junt("do o" , "do")
do junt("do a" , "da")

do junt("de o" , "do")
do junt("de a" , "da")
do junt("de um" , "dum")
do junt("de uma" , "duma")


do junt("em o", "no")
do junt("em a", "na") 
do junt("em um", "num")
do junt("em uma", "numa") 

do junt("por o", "pelo")
do junt("por a", "pela")
 
unless junta_artigos($s,$sx ) as $s = $sx 
do junta_artigos($s,$sx) as   match($s,"$x $a $y"),  junt($a,$b),    junta_artigos($x,$xx),junta_artigos($y,$yy),   $sx = expand("$xx $b $yy") 


do write_pt ( $s ) as   write($s)
do write_pt ( $s ) => junta_artigos($s,$sx), discard, write_pt($sx)

//do main() as region($x, $z ), write_pt(  "$x está em $z \n" )
//do main() as change(reator,region, outter_space),  write_pt(  "\n") 
//do main() as region($x ,  $z ), write_pt( "a região de $x é $z \n" )



do p($z,$n) as  $n == 5 ,  write("$z \n")
do p($z,$n) as  $n < 5 , $w = $z + {"0";"1"},  p($w,$n+1) 

 
do verb_i(VMIP1S0, [singular,person1], VMIP )
do verb_i(VMIP2S0, [singular,person2], VMIP )
do verb_i(VMIP3S0, [singular,person3], VMIP )
do verb_i(VMIP1P0, [plural,person1], VMIP )
do verb_i(VMIP2P0, [plural,person2], VMIP )
do verb_i(VMIP3P0, [plural,person3], VMIP )
do verb_i(VMIF1S0, [singular,person1], VMIF )
do verb_i(VMIF2S0, [singular,person2], VMIF )
do verb_i(VMIF3S0, [singular,person3], VMIF )
do verb_i(VMIF1P0, [plural,person1], VMIF )
do verb_i(VMIF2P0, [plural,person2], VMIF )
do verb_i(VMIF3P0, [plural,person3], VMIF )
do verb_i(VMIS1S0, [singular,person1], VMIS )
do verb_i(VMIS2S0, [singular,person2], VMIS )
do verb_i(VMIS3S0, [singular,person3], VMIS )
do verb_i(VMIS1P0, [plural,person1], VMIS )
do verb_i(VMIS2P0, [plural,person2], VMIS )
do verb_i(VMIS3P0, [plural,person3], VMIS )
do verb_i(VMII1S0, [singular,person1], VMII )
do verb_i(VMII2S0, [singular,person2], VMII )
do verb_i(VMII3S0, [singular,person3], VMII )
do verb_i(VMII1P0, [plural,person1], VMII )
do verb_i(VMII2P0, [plural,person2], VMII )
do verb_i(VMII3P0, [plural,person3], VMII )
do verb_i(VMIM1S0, [singular,person1], VMIM )
do verb_i(VMIM2S0, [singular,person2], VMIM )
do verb_i(VMIM3S0, [singular,person3], VMIM )
do verb_i(VMIM1P0, [plural,person1], VMIM )
do verb_i(VMIM2P0, [plural,person2], VMIM )
do verb_i(VMIM3P0, [plural,person3], VMIM )
do verb_i(VMSP1S0, [singular,person1], VMSP )
do verb_i(VMSP2S0, [singular,person2], VMSP )
do verb_i(VMSP3S0, [singular,person3], VMSP )
do verb_i(VMSP1P0, [plural,person1], VMSP )
do verb_i(VMSP2P0, [plural,person2], VMSP )
do verb_i(VMSP3P0, [plural,person3], VMSP )
do verb_i(VMSF1S0, [singular,person1], VMSF )
do verb_i(VMSF2S0, [singular,person2], VMSF )
do verb_i(VMSF3S0, [singular,person3], VMSF )
do verb_i(VMSF1P0, [plural,person1], VMSF )
do verb_i(VMSF2P0, [plural,person2], VMSF )
do verb_i(VMSF3P0, [plural,person3], VMSF )
do verb_i(VMSI1S0, [singular,person1], VMSI )
do verb_i(VMSI2S0, [singular,person2], VMSI )
do verb_i(VMSI3S0, [singular,person3], VMSI )
do verb_i(VMSI1P0, [plural,person1], VMSI )
do verb_i(VMSI2P0, [plural,person2], VMSI )
do verb_i(VMSI3P0, [plural,person3], VMSI )
do verb_i(VM0C1S0, [singular,person1], VM0C )
do verb_i(VM0C2S0, [singular,person2], VM0C )
do verb_i(VM0C3S0, [singular,person3], VM0C )
do verb_i(VM0C1P0, [plural,person1], VM0C )
do verb_i(VM0C2P0, [plural,person2], VM0C )
do verb_i(VM0C3P0, [plural,person3], VM0C )
do verb_i(VMM02S0, [singular,person2], VMM0 )
do verb_i(VMM03S0, [singular,person3], VMM0 )
do verb_i(VMM01P0, [plural,person1], VMM0 )
do verb_i(VMM02P0, [plural,person2], VMM0 )
do verb_i(VMM03P0, [plural,person3], VMM0 )

do verb(VMPS0SM, [mas,singular], VMPS )
do verb(VMPS0SF, [fem,singular], VMPS )
do verb(VMPS0PM, [mas,plural], VMPS )
do verb(VMPS0PF, [fem,plural], VMPS )
do verb(VMGP0SM, [mas,singular], VMGP )
do verb(VMGP0SF, [fem,singular], VMGP )
do verb(VMGP0PM, [mas,plural], VMGP )
do verb(VMGP0PF, [fem,plural], VMGP )
do verb(AQVMS00, [mas,singular], AQVM )
do verb(AQVMP00, [mas,plural], AQVM )
do verb(AQVFS00, [fem,singular], AQVF )
do verb(AQVFP00, [fem,plural], AQVF )
do verb(AQVCS00, [singular], AQVC )
do verb(AQVCP00, [plural], AQVC )
do verb(AQVCN00, [], AQVC )
do verb(AQSMS00, [mas,singular], AQSM )
do verb(AQSMP00, [mas,plural], AQSM )
do verb(AQSFS00, [fem,singular], AQSF )
do verb(AQSFP00, [fem,plural], AQSF )
do verb(AQSCS00, [singular], AQSC )
do verb(AQSCP00, [plural], AQSC )
do verb(AQSCN00, [], AQSC )

do verb(APVMS1S, [mas,singular,person1], APVM )
do verb(APVMS2S, [mas,singular,person2], APVM )
do verb(APVMS3S, [mas,singular,person3], APVM )
do verb(APVMS1P, [mas,singular,person1], APVM )
do verb(APVMS2P, [mas,singular,person2], APVM )
do verb(APVMS3P, [mas,singular,person3], APVM )
do verb(APVMP1S, [mas,plural,person1], APVM )
do verb(APVMP2S, [mas,plural,person2], APVM )
do verb(APVMP3S, [mas,plural,person3], APVM )
do verb(APVMP1P, [mas,plural,person1], APVM )
do verb(APVMP2P, [mas,plural,person2], APVM )
do verb(APVMP3P, [mas,plural,person3], APVM )
do verb(APVFS1S, [fem,singular,person1], APVF )
do verb(APVFS2S, [fem,singular,person2], APVF )
do verb(APVFS3S, [fem,singular,person3], APVF )
do verb(APVFS1P, [fem,singular,person1], APVF )
do verb(APVFS2P, [fem,singular,person2], APVF )
do verb(APVFS3P, [fem,singular,person3], APVF )
do verb(APVFP1S, [fem,plural,person1], APVF )
do verb(APVFP2S, [fem,plural,person2], APVF )
do verb(APVFP3S, [fem,plural,person3], APVF )
do verb(APVFP1P, [fem,plural,person1], APVF )
do verb(APVFP2P, [fem,plural,person2], APVF )
do verb(APVFP3P, [fem,plural,person3], APVF )
do verb(APVCS1S, [singular,person1], APVC )
do verb(APVCS2S, [singular,person2], APVC )
do verb(APVCS3S, [singular,person3], APVC )
do verb(APVCS1P, [singular,person1], APVC )
do verb(APVCS2P, [singular,person2], APVC )
do verb(APVCS3P, [singular,person3], APVC )
do verb(APVCP1S, [plural,person1], APVC )
do verb(APVCP2S, [plural,person2], APVC )
do verb(APVCP3S, [plural,person3], APVC )
do verb(APVCP1P, [plural,person1], APVC )
do verb(APVCP2P, [plural,person2], APVC )
do verb(APVCP3P, [plural,person3], APVC )
do verb(APVCN1S, [person1], APVC )
do verb(APVCN2S, [person2], APVC )
do verb(APVCN3S, [person3], APVC )
do verb(APVCN1P, [person1], APVC )
do verb(APVCN2P, [person2], APVC )
do verb(APVCN3P, [person3], APVC )
do verb(AO0MS00, [mas,singular], AO0M )
do verb(AO0MP00, [mas,plural], AO0M )
do verb(AO0FS00, [fem,singular], AO0F )
do verb(AO0FP00, [fem,plural], AO0F )
do verb(AO0CS00, [singular], AO0C )
do verb(AO0CP00, [plural], AO0C )
do verb(AO0CN00, [], AO0C )

do verb(AQ0FS00, [fem,singular], AQ )
do verb(AQ0MS00, [mas,singular], AQ )
do verb(AQ0FP00, [fem,plural ], AQ )
do verb(AQ0MP00, [mas,plural], AQ )
do verb(AQCFS00, [fem,singular], AQ )
do verb(AQCMS00, [mas,singular], AQ )
do verb(AQCFP00, [fem,plural], AQ )
do verb(AQCMP00, [mas,plural], AQ ) 
do verb(AQSFS00, [fem,singular], AQ )
do verb(AQSMS00, [mas,singular], AQ )
do verb(AQSFP00, [fem,plural], AQ )
do verb(AQSMP00, [mas,plural], AQ )


do conjug("revoltada", "revoltado", AQ0FS00)
do conjug("revoltadas", "revoltado", AQ0FS00)
do conjug("revoltadazinha", "revoltado", AQCFS00)
do conjug("revoltadazinhas", "revoltado", AQCFP00)
do conjug("revoltadazita", "revoltado", AQCFS00)
do conjug("revoltadazitas", "revoltado", AQCFP00)
do conjug("revoltado", "revoltado", AQ0MS00) 
do conjug("revoltados", "revoltado", AQ0MP00)
do conjug("revoltadozinho", "revoltado", AQCMS00)
do conjug("revoltadozinhos", "revoltado", AQCMP00)
do conjug("revoltadozito", "revoltado", AQCMS00)
do conjug("revoltadozitos", "revoltado", AQCMP00)
do conjug("revoltadíssima", "revoltado", AQSFS00)
do conjug("revoltadíssimas", "revoltado", AQSFP00)
do conjug("revoltadíssimo", "revoltado", AQSMS00)
do conjug("revoltadíssimos", "revoltado", AQSMP00)
 
do conjug("estada" ,"estar" ,VMP00SF)
do conjug("estadas" ,"estar" ,VMP00PF)
do conjug("estado" ,"estar" ,VMP00SM)
do conjug("estados" ,"estar" ,VMP00PM)
do conjug("está" ,"estar" ,VMIP3S0)
do conjug("está" ,"estar" ,VMM02S0)
do conjug("estais" ,"estar" ,VMIP2P0)
do conjug("estamo" ,"estar" ,VMIP1P0)
do conjug("estamos" ,"estar" ,VMIP1P0)
do conjug("estando" ,"estar" ,VMG0000)
do conjug("estão" ,"estar" ,VMIP3P0)
do conjug("estará" ,"estar" ,VMIF3S0)
do conjug("estarão" ,"estar" ,VMIF3P0)
do conjug("estarás" ,"estar" ,VMIF2S0)
do conjug("estardes" ,"estar" ,VMN02P0)
do conjug("estarei" ,"estar" ,VMIF1S0)
do conjug("estareis" ,"estar" ,VMIF2P0)
do conjug("estarem" ,"estar" ,VMN03P0)
do conjug("estaremos" ,"estar" ,VMIF1P0)
do conjug("estares" ,"estar" ,VMN02S0)
do conjug("estar" ,"estar" ,VMN0000)
do conjug("estar" ,"estar" ,VMN01S0)
do conjug("estar" ,"estar" ,VMN03S0)
do conjug("estaria" ,"estar" ,VMIC1S0)
do conjug("estaria" ,"estar" ,VMIC3S0)
do conjug("estariam" ,"estar" ,VMIC3P0)
do conjug("estaríamos" ,"estar" ,VMIC1P0)
do conjug("estarias" ,"estar" ,VMIC2S0)
do conjug("estaríeis" ,"estar" ,VMIC2P0)
do conjug("estarmo" ,"estar" ,VMN01P0)
do conjug("estarmos" ,"estar" ,VMN01P0)
do conjug("estás" ,"estar" ,VMIP2S0)
do conjug("estava" ,"estar" ,VMII1S0)
do conjug("estava" ,"estar" ,VMII3S0)
do conjug("estavam" ,"estar" ,VMII3P0)
do conjug("estávamo" ,"estar" ,VMII1P0)
do conjug("estávamos" ,"estar" ,VMII1P0)
do conjug("estavas" ,"estar" ,VMII2S0)
do conjug("estáveis" ,"estar" ,VMII2P0)
do conjug("esteja" ,"estar" ,VMM03S0)
do conjug("esteja" ,"estar" ,VMSP1S0)
do conjug("esteja" ,"estar" ,VMSP3S0)
do conjug("estejai" ,"estar" ,VMM02P0)
do conjug("estejais" ,"estar" ,VMM02P0)
do conjug("estejais" ,"estar" ,VMSP2P0)
do conjug("estejam" ,"estar" ,VMM03P0)
do conjug("estejam" ,"estar" ,VMSP3P0)
do conjug("estejamo" ,"estar" ,VMM01P0)
do conjug("estejamos" ,"estar" ,VMM01P0)
do conjug("estejamos" ,"estar" ,VMSP1P0)
do conjug("estejas" ,"estar" ,VMM02S0)
do conjug("estejas" ,"estar" ,VMSP2S0)
do conjug("esteve" ,"estar" ,VMIS3S0)
do conjug("estive" ,"estar" ,VMIS1S0)
do conjug("estivemo" ,"estar" ,VMIS1P0)
do conjug("estivemos" ,"estar" ,VMIS1P0)
do conjug("estivera" ,"estar" ,VMIM1S0)
do conjug("estivera" ,"estar" ,VMIM3S0)
do conjug("estiveram" ,"estar" ,VMIM3P0)
do conjug("estiveram" ,"estar" ,VMIS3P0)
do conjug("estivéramo" ,"estar" ,VMIM1P0)
do conjug("estivéramos" ,"estar" ,VMIM1P0)
do conjug("estiveras" ,"estar" ,VMIM2S0)
do conjug("estiverdes" ,"estar" ,VMSF2P0)
do conjug("estivéreis" ,"estar" ,VMIM2P0)
do conjug("estiverem" ,"estar" ,VMSF3P0)
do conjug("estiveres" ,"estar" ,VMSF2S0)
do conjug("estiver" ,"estar" ,VMSF1S0)
do conjug("estiver" ,"estar" ,VMSF3S0)
do conjug("estivermos" ,"estar" ,VMSF1P0)
do conjug("estivesse" ,"estar" ,VMSI1S0)
do conjug("estivesse" ,"estar" ,VMSI3S0)
do conjug("estivésseis" ,"estar" ,VMSI2P0)
do conjug("estivessem" ,"estar" ,VMSI3P0)
do conjug("estivéssemos" ,"estar" ,VMSI1P0)
do conjug("estivesses" ,"estar" ,VMSI2S0)
do conjug("estiveste" ,"estar" ,VMIS2S0)
do conjug("estivestes" ,"estar" ,VMIS2P0)
do conjug("estou" ,"estar" ,VMIP1S0) 
  

do conjug("revolta","revolto", AQ0FS00)
do conjug("revoltas","revolto", AQ0FP00)
do conjug("revolto","revolto", AQ0MS00)
do conjug("revoltos","revolto", AQ0MP00)
 
do conjug("mar", "mar", NCMS000)
do conjug("mares", "mar", NCMP000)
do conjug("marzinho", "mar", NCMS000)
do conjug("marzinhos", "mar", NCMP000)
do conjug("marzito", "mar", NCMS000)
do conjug("marzitos", "mar", NCMP000)


do verb(NCMS000, [singular,mas], NC )
do verb(NCMP000, [plural,mas], NC )
do verb(NCFS000, [singular,fem], NC )
do verb(NCFP000, [plural,fem], NC )


 


do modo_v($x,singular,$person ) as verb_i($x , $arr, _) , member(singular, $arr), member($person, $arr)
do modo_v($x,plural,$person ) as verb_i($x , $arr, _) , member(plural, $arr), member($person, $arr)

do modo($x,singular,mas ) as verb($x , $arr, _) , member(singular, $arr), member(mas, $arr)
do modo($x,singular,fem ) as verb($x , $arr, _) , member(singular, $arr), member(fem, $arr)
do modo($x,plural,mas ) as verb($x , $arr, _) , member(plural, $arr), member(mas, $arr)
do modo($x,plural,fem ) as verb($x , $arr, _) , member(plural, $arr), member(fem, $arr)

do det( "o", singular,mas )  
do det( "a", singular,fem ) 
do det( "os", plural,mas ) 
do det( "as",plural,fem ) 


do person($x, person1 ) as verb($x , $arr, _) , member(person1, $arr) 
do person($x, person2 ) as verb($x , $arr, _) , member(person2, $arr) 
do person($x, person3 ) as verb($x , $arr, _) , member(person3, $arr) 

do conjug_verb($v,$ps,$person ) as modo_v($x_verb,$ps,$person  ),conjug($vconj, $v,$x_verb), $vconj
 
do perfom() as  {                 
                $mar = "mares", 
                conjug($mar, _,$x_noun),  modo($x_noun,$ps,$m ), 
                modo($m_adj,$ps,$m ),conjug($revolto, "revolto",$m_adj),
                $estar = conjug_verb("estar",$ps,person3),
                det($artigo,$ps,$m ),
                write("$artigo $mar $estar $revolto \n") }
   

 do main() as perfom()
do ph($x) as p($x,0)
//do main() as conjug($revolto, "revolto",$m_verbo) , modo($ps,$m,$m_verbo), modo($ps,$m,$x_noun),  conjug($mar, "mar",$x_noun), write("o $mar esta $revolto \n")
